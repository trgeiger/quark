ARG BASE_IMAGE="ghcr.io/trgeiger/quark"
ARG IMAGE_NAME="${IMAGE_NAME:-quark-open}"
ARG FEDORA_MAJOR_VERSION="${FEDORA_MAJOR_VERSION:-40}"
ARG NVIDIA_MODULE_TYPE="${NVIDIA_MODULE_TYPE:-nvidia-open}"
ARG NVIDIA_VERSION="${NVIDIA_VERSION:-stable}"

FROM ghcr.io/trgeiger/nvidia-kmod-${NVIDIA_MODULE_TYPE}:${FEDORA_MAJOR_VERSION}-${NVIDIA_VERSION} AS nvidia-akmods

FROM ${BASE_IMAGE}:${FEDORA_MAJOR_VERSION} AS quark

ARG IMAGE_NAME="${IMAGE_NAME:-quark}"
ARG IMAGE_VENDOR="${IMAGE_VENDOR}"
ARG IMAGE_FLAVOR="${IMAGE_FLAVOR}"
ARG IMAGE_BRANCH="${IMAGE_BRANCH:-main}"
ARG KERNEL_FLAVOR="${KERNEL_FLAVOR}"
ARG BASE_IMAGE_NAME="${BASE_IMAGE_NAME:-silverblue}"
ARG FEDORA_MAJOR_VERSION="${FEDORA_MAJOR_VERSION:-40}"
ARG NVIDIA_VERSION="${NVIDIA_VERSION:-stable}"

COPY tmp /tmp

RUN install -Dm644 tmp/private_key.priv /etc/pki/akmods/private/private_key.priv && \
    install -Dm644 /etc/pki/akmods/certs/quark-secure-boot.der /etc/pki/akmods/certs/public_key.der

RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=nvidia-akmods,src=/rpms,dst=/tmp/akmods-rpms \
    ENABLED_REPOS="fedora,updates,updates-archive,rpmfusion-free,rpmfusion-nonfree,rpmfusion-free-updates,rpmfusion-nonfree-updates" && \
    if [[ "${NVIDIA_VERSION}" == "beta" ]]; then \
        # sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/tayler.repo \
        echo "Installing beta driver" && \
        cpm enable kwizart/nvidia-driver-rawhide && \
        sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/fedora-updates-testing.repo && \
        rpm-ostree install rpmfusion-nonfree-release-rawhide && \
        ENABLED_REPOS="$ENABLED_REPOS,updates-testing,rpmfusion-nonfree-rawhide" \
    ; else \
        echo "Installing stable driver" \
        # sed -i '0,/enabled=1/s//enabled=0/' /etc/yum.repos.d/tayler.repo \
    ; fi  && \
    rpm-ostree install \
    --enablerepo=$ENABLED_REPOS \
        xorg-x11-drv-nvidia-cuda \
        xorg-x11-drv-nvidia-cuda-libs \
        nvidia-vaapi-driver \
        libva-utils \
        vdpauinfo \
        libva-nvidia-driver \
        mesa-vulkan-drivers.i686 \
        /tmp/akmods-rpms/kmods/kmod-nvidia-*.rpm && \
    KERNEL_VERSION="$(rpm -q kernel-cachyos --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
    modinfo -l /usr/lib/modules/${KERNEL_VERSION}/extra/nvidia/nvidia{,-drm,-modeset,-peermem,-uvm}.ko.xz && \
    rm -f /usr/share/vulkan/icd.d/nouveau_icd.*.json

RUN rm -f /etc/pki/akmods/private/private_key.priv && \
    rm -f /etc/pki/akmods/certs/public_key.der && \
    /usr/libexec/containerbuild/build-initramfs && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit
